def KAYMERA_REPOSITORY_URL = 'http://gerrit02.kaymera.com:8080/KaymeraRepository'
def KAYMERA_REPOSITORY_SUB_DIR = '/mnt/data/projects/Kaymera_Apps'
def KMTD_HOME = KAYMERA_REPOSITORY_SUB_DIR + '/Android/Kmtd'
def BUILD_SCRIPT = KMTD_HOME + '/jenkins/build.sh'

properties([
	[$class: 'JobRestrictionProperty'], 
	parameters(
		[
		[$class: 'CascadeChoiceParameter', 
		choiceType: 'PT_SINGLE_SELECT', 
		description: '''\nSelect a Job type\n''', 
		filterable: false, 
		name: 'JOB_TYPE', 
		randomName: 'choice-parameter-3883234084844795', 
		referencedParameters: '', 
		script: [$class: 'GroovyScript', 
			fallbackScript: [classpath: [], 
				sandbox: false, 
				script: ''], 
				script: [classpath: [],
				sandbox: false, 
				script: 'def jobTypes = [\'continues\',\'release\']; return jobTypes'
					]
				]
		], 
		[$class: 'CascadeChoiceParameter', 
		choiceType: 'PT_SINGLE_SELECT', 
		description: '''\nSelect a Type\n''', 
		filterable: false, 
		name: 'TYPE', 
		randomName: 'choice-parameter-3883234086893611', 
		referencedParameters: '', 
		script: [$class: 'GroovyScript', 
			fallbackScript: [classpath: [], 
				sandbox: false, 
				script: ''], 
				script: [classpath: [], 
				sandbox: false, 
				script: '''def types = [\'release\',\'debug\'];return types''']
				]
		], 
		[$class: 'CascadeChoiceParameter', 
		choiceType: 'PT_SINGLE_SELECT', 
		description: '''\nSelect a Env\n''', 
		filterable: false, 
		name: 'ENV', 
		referencedParameters: '', 
		script: [$class: 'GroovyScript', 
			fallbackScript: [classpath: [], 
			sandbox: false, 
			script: ''], 
			script: [classpath: [], 
			sandbox: false, 
			script: '''def envs = [\'prod\',\'stb\',\'dev\',\'demo\'];return envs''']
			]
		],
		[$class: 'CascadeChoiceParameter', 
		choiceType: 'PT_SINGLE_SELECT', 
		description: '''\nSelect a KaymerRepository Branch\n''', 
		name: 'KAYMERA_REPOSITORY_BRANCH', 
		script: [$class: 'GroovyScript', 
			fallbackScript: [classpath: [], 
			sandbox: false, 
			script: ''], 
			script: [classpath: [], 
			sandbox: false, 
			script: '''def branchesList = [\'master\',\'release/<release name>\'];return branchesList''']
			]
		]
		]),
	pipelineTriggers([])
	])

node {

	stage('checkout KaymeraRepository') {
	echo 'branch name '+env.KAYMERA_REPOSITORY_BRANCH
	checkout scm: ([$class: 'GitSCM',
                        branches: [[name: env.KAYMERA_REPOSITORY_BRANCH]],
                        userRemoteConfigs: [[url: KAYMERA_REPOSITORY_URL]],
                        extensions: [[$class: 'RelativeTargetDirectory',
                                      relativeTargetDir: KAYMERA_REPOSITORY_SUB_DIR ]]
       	 		])
	}
	
	stage ('Kick the build script') {
		def command = 'exit 1'
		if (env.JOB_TYPE == 'continues' ){
			command = BUILD_SCRIPT + ' ' + env.JOB_TYPE
		}else if (env.JOB_TYPE == 'release' ){
			command = BUILD_SCRIPT + ' ' + env.JOB_TYPE
		}else {
			echo 'Error, select build type'
		}
		echo command
		sh command
	}
	
	stage ('Sign APK using upload key, the signed APK name should be suffixed with signedUploadKey') {
		def versionName = readFile file: KMTD_HOME + '/app/version.properties'
		echo versionName
		String[] lines = text.split("\\n");
		versionName = lines[1];
		env.VERSION_NAME = versionName
		echo env.VERSION_NAME
		def versionCode = readFile file: KMTD_HOME + '/verCode_tmp.properties'
		env.VERSION_CODE = versionCode
		echo env.VERSION_CODE
		env.JKS_PATH = '/tmp/amtd-upload-cert.jks'
		echo env.JKS_PATH
		def command = '''
SMB_OUT_PATH="${SMB_PATH}/apps/android/${VERSION_NAME}/${JOB_TYPE}/${VERSION_CODE}/${ENV}";
BUILD_OUT_PATH="${KMTD_HOME}/app/build/outputs/apk";
mkdir -p ${OUT_PATH};
FILE_BASIC_NAME="ciplerwatch-${VERSION_NAME}.${VERSION_CODE}-${TYPE}-${ENV}";
FROM="/${FILE_BASIC_NAME}-signedUploadKey.apk";
TO="${SMB_OUT_PATH}/${FILE_BASIC_NAME}.apk";
apksigner sign --ks ${JKS_PATH} --out ${FROM} ${TO}
		'''
		echo command
		sh command
	}
}
